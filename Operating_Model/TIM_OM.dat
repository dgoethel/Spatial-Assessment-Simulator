

#OM_structure
#   // ==0 the OM is panmictic
#   // ==1 the OM is metamictic
#   // ==2 the OM is metapop
#   // ==3 the OM is natal homing - not there yet...
2

#nages
8  ## 
#nyrs
30 #
#npopulations
2
#nregions
1
1
#nfleets
1
1
#nfleets_survey
1
1

# // INDICES FOR RNG...use these to input the MAX values across ALL runs/scenarios for a simulation experiment so that always have consistent RNG values
#max_pops
2
#max_regs
1
#max_ages
8
#max_yrs
30
#max_flts
1
#max_surv_flts
1
#max_tag_yrs
30
############################################

#model_type_switch
  #==0 do not use TAC to set F
  #==1 use TAC to set F, USE THIS IF calc_TAC_from_uMSY==1
  #==2 use uMSY to set F
0

#do_tag
  #==0 do not calculate tagging data
  #==1 calculate tagging data
1

# parse_TAC
  #==0 do not alter the input TAC or harvest rate
  #==1 use observed data source to parse TAC or harvest rate (used when allocating harvest but pop structure unknown)
0

#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////// USING calc_TAC_from_uMSY==1 IS PROBABLY ONLY CORRECT WAY TO PARSE u /////////////////////////////////////////////////
#/////////////// IF PARSE input_u directly, then sum(u) unlikely to equal input_u because of differences in population sizes/////////
#/////////////// ie applying less than the full uMSY to each area/region ////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# calc_TAC_from_uMSY
###########################################################################################################################
  #MUST HAVE MODEL_TYPE==1, even though uses input u (harvest rate)
##############################################################################################################################
  #==0 don't use
  #==1 calculate a yearly TAC from uMSY(input)*biomass_population(j,y) to get a yearly TAC that obtains MSY in equil without crashing the stock
  #==2 calculate a yearly TAC from uMSY(input)*biomass_region(j,r,y) to get a yearly TAC that obtains MSY in equil without crashing the stock
0
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#parse_TAC_source
  #==0 recruitment index_BM, assume rec index occurs at tspawn so always have inherent 1 year timelag in using to parse TAC (even if tspawn==0)
  #==1 recruitment index_AM, assume rec index occurs at tspawn so always have inherent 1 year timelag in using to parse TAC (even if tspawn==0)
  #==2 survey biomass
  #==3 equal apportionment across all fleets in a given area
2
#TAC_survey_parse_timelag_switch
 # //==0 no timelag, use survey apportionment in current year (if tsurvey==0) or previous year (if tsurvey>0) (ie inherent lag if survey not at beginning of year)
  #//==1 use timelag, use survey apportionment from y-TAC_survey_parse_timelag, assume equal apportionment of TAC among fleets in  years where y<timelag
0
#TAC_survey_parse_timelag
 # //whole number value to implement a time lag in year that use survey apportionment from
1

#tsurvey in proportion of year (0-1) (1,nps,1,nreg)
0.5
0.5

#larval_move_switch  ## THIS NEEDS TO BE SET ==1 if the OM is being used for estimation##
  #==(-1) larval movement is determined same as other ages (e.g., by move_switch)
  #==0 no movement
  #==1 input movement
  #==2 movement within stock only based on residency (symmetric)
  #==3 symmetric movement but only allow movement within a stock (ie regions within a stock) not across stocks
  #==4 symmetric movement across all stocks and regions
  #==5 allow movement across all regions and stocks, based on stock/region specific residency (symmetric off diagnol)
-1

#move_switch
  #==0 no movement
  #==1 input movement ####THIS CAN BE USED FOR AGE_BASED MOVEMENT BUT NOT TIME-VARYING, USE OPTION 21 FOR TIME_VARYING INPUT MOVEMENT
  #==2 movement within stock only based on residency (symmetric)
  #==3 symmetric movement but only allow movement within a stock (ie regions within a stock) not across stocks
  #==4 symmetric movement across all stocks and regions
  #==5 allow movement across all regions and stocks, based on stock/region specific residency (symmetric off diagnol)
  #==6 natal return, based on age of return and return probability (certain fraction of fish make return migration to natal stock eg ontogenetic migration)
  #==7 larvae stay in the population that they move to (i.e., for overlap, do not return to natal population if adult movement==0...otherwise with natal
  #//    homing would return to natal population because natal residency is 100% and use natal movement rates (not current population movement rates like with metapopulation/random movement))
  #==8 density dependent movement based on relative biomass among potential destination area/regions, partitions (1-input_residency) based on a logistic function of biomass in current area/region and 'suitability' of destination area/regions
  #// uses use_input_Bstar switch
  #// DD MOVEMENT CAN BE AGE BASED OR CONSTANT ACROSS AGES...FOR AGE BASED MAKE SURE DD_move_age_switch==1, FOR AGE-INVARIANT DD_move_age_switch==0
  #==9 use input T_year to allow T to vary by year
  #==10 use T_Full_Input to input time and age varying T
8

#rand_move
 #///adjust movement to include random variation based on input sigma and lognormal random variable (by year and age)
 #// if either move_switch or larval_move_switch set 0 (no move), then rand_move is bypassed
  #//==0 no randomness, just use movement
  #//==1 add randomness (bounded so Fract move cannot exceed 1 or go below 0)
1
## DD_move_age_switch
 #Allow age-based movement when using DD movement (Y/N) (1/0)
  #==0 no age-based DD movement (assumes movement based on total relative biomass after movement, before mortality, in previous year...compared to Bstar summed across ages)   ///can't use current year because biomass matrix not filled out at time of DD calcs, bec need T for calc of abund_AM which occurs before moving to next age loop
  #==1 DD movement is age-based (assumes movement based on age-specfic relative biomass at beginning of current year...compared to Bstar by age)
1

#use_input_Bstar
#######NOT FULLY IMPLEMENTED YET##########
  #==0 set Bstar for DD movement equal to SSB_zero*SSB_zero_appor (if nreg==1, Bstar=SSB0), **NOTE** for Rec_type!=2 (not BH), defaults to using input_Bstar since no SSB0 calcs are done
############################################
  #==1 use input_Bstar
1
############################

#natal homing switch
  #==0 no natal homing (SSB is sum of SSB in population regardless of natal origin; weight/mat/fecund/ are based on current population not natal population) - Metapopulation/metamictic
  #==1 do natal homing (a fish only adds to SSB if it is in its natal population at spawning time; weight/mat/fecund/ are based on natal population) - Natal homing
  #natal homing  assumes genetic based life history and contribution to SSB (i.e., natal homing and no demographic mixing), natal homing==0 assumes demographic mixing (e.g. metapopulations where life history is more location based)
0
#spawn_return_switch
   #==0 if natal_homing_switch==1 then only fish that are in natal population add to SSB
   #==1 natal_homing_switch==1 a fraction of fish return to natal population to spawn (inpsantaneous migration to natal population and back at time of spawning) based spawn_return_prob; weight/mat/fecund/ are based on natal population)
0
#select_switch
  #==0 input selectivity
  #==1 logistic selectivity based on input sel_beta1 and sel_beta2
  #==2 double logistic selectivity based on input sel_beta1, sel_beta2,sel_beta3,sel_beta4
1

#select_switch_survey
  #==0 input selectivity
  #==1 logistic selectivity based on input sel_beta1 and sel_beta2
  #==2 double logistic selectivity based on input sel_beta1, sel_beta2,sel_beta3,sel_beta4
1

#F_switch
  #==1 input F
  #==2 input single overall F (FMSY)
  #==3 Estimate F that minimizes difference in input and estimated total harvest rate
  #==4 overall F is split evenly among stocks (each fleet uses stock F)
  #==5 overall F is is split evenly among all regions (each fleet uses region F)
  #==6 overall F is split evenly among fleets
  #==7 F devs about input F based on sigma_F
  #==8 random walk in F
  #==9 dunce cap F; F increases to a peak half way through time series then decrease back to min over remainder of time series
9

#recruit_devs_switch
  #==0 use stock-recruit relationship directly
  #==1 allow lognormal error around SR curve (i.e., include randomness based on input sigma_recruit)
1

#recruit_randwalk_switch
  #==0 no random walk recruitment deviations
  #==1 have random walk lognormal recruitment deviations (requirs recruit_devs_switch==1)....NEEDS WORK!!!
0

#init_abund_switch
  #==0 input init abund
  #==1 decay from R_ave
0

#maturity_switch_equil
  #//==0 for equal by area or average
  #//==1 weighted average using equil_ssb_apportion to determine proportional contribution to equil vital rates by region
  #//SSB0 must be calculated to determine stock-recruit function (if only know steepness and R0 for the population)
  #//Use equilibrium SPR calcs to get SSB0, but to do so requires vital rates (maturity, weight), which are typically constant across a population
  #//With multiple regions within a pop each with different vitals, must make assumption regarding the proportional contribution of each region's demograhics to equil SSB
  #//When ==1 just assume equal (average) contributions, when ==1 input a proportional contribution (ie assume one region has higher carrying capacity and contributes more to equil SSB)
0

#SSB_type
  #==1 fecundity based SSB
  #==2 weight based SSB
2

#apportionment_type
  #==-1 no recruitment apportionment to regions within a stock (each region within a stock gets full amount of recruits from SR curve)
  #==0 apportionment to each region is based on relative SSB in region compared to stock SSB
  #==1 input apportionment
  #==2 recruits are apportioned equally to each region within a stock
  #==3 recruits are apportioned in a completely random manner with uniform equilibrium distribution
  #==4 recruits are apportioned stochastically with normal error surrounding the input proportions...uses the multivariate logistic random variables (Cox and Krunland 2008, FIsheries Research)
  #==5 recruits are approtioned based on theoretical enviormental phase shift.. working on
1

#Rec_type
  #==1 stock-recruit relationship assumes an average value based on R_ave
  #==2 Beverton-Holt stock-recruit functions based on stock-specific input steepness, R0 (R_ave), M, and weight
  #==3 cyclical (sine wave type)
2

#use_stock_comp_info_survey
 #Determines whether it is assumed that info (stock composition data) is available determine natal origin for age composition data
 #==0 calc OBS survey age comps by area (summed across natal population)
 #==1 calc OBS survey age comps by natal population within each area
0

#use_stock_comp_info_catch
 #Determines whether it is assumed that info (stock composition data) is available determine natal origin for age composition data
 #==0 calc OBS catch age comps by area (summed across natal population)
 #==1 calc OBS catch age comps by natal population within each area
0

#number_tags_switch
  #determines how total tags are determined and how they are distributed across regions
  #==(-2) use input_total_tags and distribute evenly across regions
  #==(-1) use input_total tags and distribute across regions according to survey abundance
  #==0 use input tags by year, pop, reg
  #==1 total tags are based on the input fract of total  abund tagged and is distributed evely across regions
  #==2 regional tags are based on the input fract of regional abund tagged
  #==3 total tags are based on the input fract of total abund tagged and is distributed based on survey prop of abundance in each region
  #==4 regional tags are randomly (uniformly) distributed based on max and min number of tags per region (random # tags)
  #==5 tags are input and distributed according to regional survey abundance AND
   #prob that tagging occurs in a given region is based on opport_tag_prob and a uniform distributed random number (random tagging by area)
  #==6 tags are input and distributed according to regional survey abundance AND
   #prob that tagging occurs in a given year is based on opport_tag_year_prob and a uniform distributed random number (random tagging by year)
  #==7 yearly tags are randomly (uniformly) distributed based on max and min number of tags per region AND
   #prob that tagging occurs in a given year is based on opport_tag_year_prob and a uniform distributed random number AND
   #prob that tagging occurs in a given region is based on opport_tag_prob and a uniform distributed random number (random tagging by area and year)   
-1   
#age_dist_tags
  #determines how tags are distributed across ages
  #==0 regional tags distributed evely across all ages
  #==1 regional tags distributed according to survey proportions at age
  #==2 regional tags distributed according to regional catch proportions at age
1   
#tag_fit_ages
  #determines whether tags are fit by age cohorts or by region-only cohorts
  #the latter is for situations where age is unknown and so assume no tag age dynamics and that all fish fully selected
  #==0, fit by age-based cohorts
  #==1, fit by region-based cohorts
0
#tag_fit_ages_OM
  #determines if OM matches EM for sims with no age dynamics of tags
  #DOES NOT WORK WITH TAG MIXING!!!
  #==0, OM does not match EM
  #==1, OM matches EM
0

#sim_tag_mixing_switch
 #//determines whether tags have a different F or T in first year of release compared to rest of population (i.e., if there is incomplete mixing)
 #//==0 F and T same as rest of pop (complete mixing)
 #//==1 F and/or T have are different from rest of population (incomplete mixing)
0

#sim_tag_mixing_T_switch
  #//determines whether tags have a differentT in first year of release compared to rest of population (i.e., if there is incomplete mixing)
  #//==0 T same as rest of pop (complete mixing)
  #//==1 T  are different from rest of population (incomplete mixing)
0 
#est_tag_mixing_switch
 #//determines whether different F or T compared to rest of population in first year of release are estimated  (i.e., estimate F and/or T to account for  incomplete mixing)
 #//==0 F and T same as rest of pop (assume complete mixing)
 #//==1 F is estimated different from rest of population (incomplete mixing F only) in first year of release
 #//==2 T is estimated different from rest of population (incomplete mixing T only) in first year of release
 #//==3 F AND T are estimated different from rest of population (incomplete mixing F AND T) in first year of release
 # NOTE: est model only setup to est an F scalar between 0 and 1 (i.e., F_tag less than F for incomplete mixing)
 # EST model not setup to do tag mixing and fit by region based cohorts (i.e., can't use with tag_fit_ages==1)
0
#/////tagging data parameters
#nyrs_release
  #number of years with tag release events
  # IF WANT A ONE TIME RELEASE EVENT NEED TO USE A DUMMY RELEASE EVENT (0 tags release) TO AVOID ERRORS IN MAKING ARRAYS (i.e., 1-dim arrays cause errors), EM automatically gives release events with 0 releases no weight so won't fit the dummy release events
7

#yrs_releases
  #vector containing the model years with releases
1
5
10
15
20
25
30

#input_ntags (1,np,1,nreg,1,ny_rel)
2000 2000 2000 2000 2000 2000 2000
2000 2000 2000 2000 2000 2000 2000

#input_total_tags
5000 5000 5000 5000 5000 5000 5000

#frac_total_abund_tagged
  #proportion of total abundance that is tagged in each release year
0.15
0.15
0.15
0.15
0.15
0.15
0.15
#max_tags (1,np,1,nreg)
 #maximum tags for uniform distribution if tags_switch==4 or 5
3000
3000
#min_tags (1,np,1,nreg)
 #minimum tags for uniform distribution if tags_switch==4 or 5
1000
1000
#opport_tag_prob
 #cutoff value defining whether uniform RNG represents no tagging(<tag_prob) or tagging (>tag_prob) in a given AREA in a given year
0.35
#opport_tag_year_prob
 #cutoff value defining whether uniform RNG represents no tagging(<tag_prob) or tagging (>tag_prob) in a given YEAR
0.5
#max_life_tags
  #number of years that tag recaptures will be tallied for after release (assume proportional to longevity of the species)...use this to avoid calculating tag recaptures for all remaining model years after release since # recaptures are often extremely limited after a few years after release
5
#age_full_selection
  #for sims with tag age not fit directly, this is the age that use for F
8
#SIM_ntag
  #the ESS used to simulate multinomial tagging data
200
#myseed_ntags
  #seed for the RNG for uniform distribution of number of tags
1204032
#myseed_prob_tag
  #seed for the RNG for uniform distribution of prob of tagging
1917482
#myseed_prob_tag_year
  #seed for the RNG for uniform distribution of prob of tagging
7
#report_rate(1,np,1,ny_rel,1,nreg)
  #tag reporting rate (assume constant for all recaptures within a given release cohort, but can be variable across populations or regions)...could switch to allow variation across fleets instead
0.7
0.7
0.7
0.7
0.7
0.7
0.7
0.8
0.8
0.8
0.8
0.8
0.8
0.8

#F_tag_scalar
 #scalar on all tag Fs in year of release (MUST BE >= 0)
0.75
0.72
0.79
0.74
0.78
0.77
0.73
#T_tag_res
 #The residency rate for tagged fish in year of release, moovement rates are equal to (1-tag_scalar)/sum(nregions) OR the scalar determined by the DD parameters if DD movement turned on
0.97
0.99
0.93
0.96
0.98
0.95
0.94

##############//////Density-Dependent Movement parameters
  #used with move_switch==8
##################################################
#sigma_T
 #variance term for random T if rand_move==1
0.3
0.3
#input_Bstar(1,np,1,nreg,1,nages)
  #carrying capacity biomass term, summed value across ages is used for age-invariant DD movement
400	900	1100	1200	1400	1800	1250	700
600	800	1000	1200	1500	2000	1000	900

### NOT USED #########################
#SSB_zero_appor(1,np,1,nreg)
  #used with move_switch==8
  #determines apportionment of SSB0 when multiple regions and use_input_Bstar==0
0.6
0.4
############################################

#A
  #used with move_switch==8
  #logistic parameter, for age-invariant movement MAKE SURE THESE ARE CONSTANT ACROSS AGES
12 12 12 12 12 12 12 12
5 5 5 5 5 5 5 5
#DD_residency
  #for age-invariant movement MAKE SURE THESE ARE CONSTANT ACROSS AGES
0.95 0.87 0.75 0.8 0.7 0.85 0.75 0.9
0.9 0.85 0.7 0.75 0.8 0.9 0.75 0.8

#return_age - age of return migration for move_switch==6
7
#return_probability- probability of returning for move_switch==6
1
1
#spawn_return_prob - probability of returning for spawning if overlap_switch==2
1
1
#phase_F - must be turned on (==1) if F_type==3
-1
#phase_dummy - must be turned on (==1) if F_type!=3
1
#tspawn in proportion of year (0-1)
0
0

#steep
0.7
0.7

#R_ave - not on the log scale
6000
4000
#amplitude - amplitude of occilations for recritment variation. Use when Rec_type ==3
0.2
0.2
#freq - period of ossilation for recruitment variation. Use when Rec_type ==3
15
15

#input_T (1,np,1,nreg,1,na,1,np,1,nreg)
###for age-based T just vary these inputs by age#######
0.8	0.2
0.45	0.55
0.4	0.6
0.42	0.58
0.75	0.25
0.85	0.15
0.9	0.1
0.95	0.05	
0.05	0.95
0.08	0.92
0.06	0.94
0.03	0.97
0.3	0.7
0.4	0.6
0.5	0.5
0.4	0.6

#input_T_year (1,np,1,nreg,1,ny,1,np,1,nreg
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15

0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75

#input_residency_larval
0.85
0.75

#input_residency
0.85	0.85	0.85	0.85	0.85	0.85	0.85	0.85
0.75	0.75	0.75	0.75	0.75	0.75	0.75	0.75

#sel_beta1
1.314260271
2.448775121
#sel_beta2
3.759245849
3.160453371
#sel_beta3
-0.6
-0.6

#sel_beta4
20
20

#*******************************************************************************************************************************************
#*******************************************************************************************************************************************
#************************************************************************************************************
# SURVEY SELECTIVITY ONLY ESTIMABLE BY POPULATION (not by REGION), therefore to avoid bias make selectivity parameters constant acros REGIONS
#sel_beta1_survey
2.512556283
1.81388624

#sel_beta2_survey
2.310794966
2.643243903

#sel_beta3_survey
-0.6
-0.6

#sel_beta4_survey
20
20
#*******************************************************************************************************************************************
#*******************************************************************************************************************************************
#*******************************************************************************************************************************************

#input_selectivity (1,ns,1,nreg,1,na,1,nf)
0.05	0.1	0.25	.68	.95	.99	1	1
0.01	0.05	0.37	0.84	0.97	1	1	1

#*******************************************************************************************************************************************
#*******************************************************************************************************************************************
#************************************************************************************************************
# SURVEY SELECTIVITY ONLY ESTIMABLE BY POPULATION (not by REGION), therefore to avoid bias make selectivity parameters constant acros REGIONS

#input_survey_selectivity(1,ns,1,nreg,1,na,1,nf)
0.03	0.3	0.75	0.95	1	1	1	1
0.05	0.2	0.69	0.9	1	1	1	1
#*******************************************************************************************************************************************
#*******************************************************************************************************************************************
#*******************************************************************************************************************************************

#*******************************************************************************************************************************************
#*******************************************************************************************************************************************
#************************************************************************************************************
# SURVEY SELECTIVITY ONLY ESTIMABLE BY POPULATION (not by REGION), therefore to avoid bias make selectivity parameters constant acros REGIONS

#q_survey(by population, area and fleet) NOT REGION
0.0015
0.001
#*******************************************************************************************************************************************
#*******************************************************************************************************************************************
#************************************************************************************************************

#input_F
0.1
0.15

#dunce F parameters (1,nps,1,nr,1,3)  for Dunce Cap F option ==9
  # first column is start year of fishery (F before this ==0)
  # second column is  min  F
  # third column is max F
1 .2 .8
1 0.25 .9
#F_rho (degree of autocorrelation in F random walk
1
1

#F_MSY
0.5

#input_M
0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2
0.25	0.25	0.25	0.25	0.25	0.25	0.25	0.25

#_sigma_recruit
0.55
0.5

#_sigma_rec_prop #error around recruit apportionment
0.2
0.2

#_sigma_F
0.3
0.35

##########################################################################################################################################
#########################################################################################################################################
##########################################################################################################################################
#########################################################################################################################################
######### FOR NATAL HOMING THERE IS NO ACCOUNTING OF REGIONAL DIFFERENCES IN VITAL RATES ACROSS REGIONS WITHIN A POPULATION
######### IE BECAUSE GENETICS DEFINE VITAL RATES, THEY MUST ALL BE THE SAME
######### **********DO NOT INPUT REGIONALLY VARYING VITAL RATES, NATAL REGION WILL NOT BE PROPERLY TRACKED IN SSB CALCS #############
#########################################################################################################################################
#input_weight
0.4 0.75 1.5 3.0 5.0 7.0 7.5 7.7
0.5 0.65 2.0 4.0 5.5 7.2 7.9 8.3

#input_catch_weight
0.4 0.75 1.5 3.0 5.0 7.0 7.5 7.7
0.5 0.65 2.0 4.0 5.5 7.2 7.9 8.3

#fecundity
1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1

#maturity
0	0.1	0.3	0.5	0.95	1	1	1
0	0.05	0.25	0.4	0.9	1	1	1
##########################################################################################################################################
#########################################################################################################################################
##########################################################################################################################################
#########################################################################################################################################

#prop_fem
0.5
0.5

#input_Rec_prop
1
1

#Equil_ssb_apportion
0.6
0.4
#frac_natal ## fraction of the population in the natal population at the onset of the simulation. Use with init_abund_switch==1
1
0
0
1

#init_abund
6000	5000	5040	4320	3000	2500	1500	1000
0	0	0	0	0	0	0	0
0	0	0	0	0	0	0	0
4000	3500	4000	3000	1250	1000	900	800
#_rec_index_sigma
0.5
0.5

#_sigma_survey
0.2
0.2

#sigma_survey_overlap
0.2
0.2
0.2
0.2
#_sigma_catch
0.05
0.05

#sigma_catch_overlap
0.05
0.05
0.05
0.05
#_SIM_ncatch #//cannot exceed 2000, otherwise change dimension of associated temp vector in parameter section
150
150

#SIM_ncatch_overlap #//cannot exceed 2000, otherwise change dimension of associated temp vector in parameter section
150
150
150
150

#_SIM_nsurvey #//cannot exceed 2000, otherwise change dimension of associated temp vector in parameter section
150
150

#SIM_nsurvey_overlap #//cannot exceed 2000, otherwise change dimension of associated temp vector in parameter section
150
150
150
150
#input_TAC
 #TAC that are matching if model_type_switch==1
################################################################################################################
################################################################################################################
################################################################################################################
### IF PARSE TAC OR U USING OBS DATA THEN MAKE SURE THAT FULL TAC OR U FOR THAT AREA IS INPUT FOR EACH FLEET IN THAT AREA ###
########################################################################################################
1
1

#input_u 
.0491
.0491
################################################################################################################
################################################################################################################
################################################################################################################

#max_Fnew
5
#Fnew_start
 #starting value for NR to match TAC
0.1
#NR_iterations
 #NR iterations used to match TAC
10
#NR_dev
 #NR deviations when calculating derivative
0.001

################################################################################################################
################################################################################################################
################################################################################################################
## EM inputs
################################################################################################################
################################################################################################################
################################################################################################################

#EM_structure - for setting up .rep
  # ==0 the EM is panmictic
  # ==1 the EM is metamictic
  # ==2 the EM is metapop
2

#npops_EM
2
#nregions_EM
1
1
#nfleets_EM
1
1
#nfleets_survey_EM
1
1
#tsurvey_EM
0.5
0.5

#diagnostics_switch
  #==0 allow OBS data to be used for estimation
  #==1 allow TRUE data from OM without error to be used for estimation
0

#fleets_as_areas_switch
  # ==0 not fleets as areas
  # ==1 fleets as areas EM
0

#move_switch
 # ///// Sets the type of adult movement pattern (sets age class>1 movements)
 #// ***MUST CHANGE PHASES OF T PARAMETERS TO DETERMINE TYPE OF MOVEMENT (constant, Time varying, age-varying, both time and age varying)
 # ***IF PANMICTIC, NO MOVE, INPUT T, THEN  MAKE SURE ALL T PAR PHASES ARE SET TO NEGATIVE NUMBER****
 # ==(-2), no movement because panmictic set T par phases==-1
 # ==(-1) use input movement EM input below (use when want fixed movement that differs from true movement), set T par phases=-1
 # ==0 no movement, set T par phases=-1
 # ==1 use true movement from OM, set T par phases=-1
 # >=2 estimate movement, **IF** one of the movement parameters is a positive phase
3

#report_rate_switch
 #//==(-1), use input_report_rate_EM, reporting rate may differ from TRUE report rate
 #//==0, use TRUE reporting rate from OM
 #//==1, estimate time-invariant (pop, reg varying) reporting rate, ph_rep_rate_CNST>0
 #//==2, estimate a time-, pop-, reg-varying reporting rate ph_rep_rate_YR>0
0
#natal homing switch
  #==0 no natal homing (SSB is sum of SSB in population regardless of natal origin; weight/mat/fecund/ are based on current population not natal population) - Metapopulation/metamictic
  #==1 do natal homing (a fish only adds to SSB if it is in its natal population at spawning time; weight/mat/fecund/ are based on natal population) - Natal homing
  #natal homing  assumes genetic based life history and contribution to SSB (i.e., natal homing and no demographic mixing), natal homing==0 assumes demographic mixing (e.g. metapopulations where life history is more location based)
0

#spawn_return_switch
   #==0 if natal_homing_switch==1 then only fish that are in natal population add to SSB
   #==1 natal_homing_switch==1 a fraction of fish return to natal population to spawn (inpsantaneous migration to natal population and back at time of spawning) based spawn_return_prob; weight/mat/fecund/ are based on natal population)
0

#select_switch_EM
  #==(-1) input TRUE selectivity (make sure ph_sel <0)
  #==0 input selectivity
  #==1 logistic selectivity based on estimated sel_beta1 and sel_beta2 by region/pop
  #==2 double logistic selectivity based on input sel_beta1, sel_beta2,sel_beta3,sel_beta4
1

#select_switch_survey_EM
  #==(-1) input TRUE selectivity (make sure ph_sel <0)
  #==0 input selectivity
  #==1 logistic selectivity based on estimated sel_beta1 and sel_beta2 by region/pop
  #==2 double logistic selectivity based on input sel_beta1, sel_beta2,sel_beta3,sel_beta4
1

#maturity_switch_equil
  #//==0 for equal by area or average
  #//==1 weighted average using equil_ssb_apportion to determine proportional contribution to equil vital rates by region
  #//SSB0 must be calculated to determine stock-recruit function (if only know steepness and R0 for the population)
  #//Use equilibrium SPR calcs to get SSB0, but to do so requires vital rates (maturity, weight), which are typically constant across a population
  #//With multiple regions within a pop each with different vitals, must make assumption regarding the proportional contribution of each region's demograhics to equil SSB
  #//When ==1 just assume equal (average) contributions, when ==1 input a proportional contribution (ie assume one region has higher carrying capacity and contributes more to equil SSB)
0

#SSB_type
  #==1 fecundity based SSB
  #==2 weight based SSB
2

#Rec_type
  #==1 stock-recruit relationship assumes an average value based on R_ave
  #==2 Beverton-Holt stock-recruit functions based on stock-specific input steepness, R0 (R_ave), M, and weight
  #==3 cyclical (sine wave type)
2

#apportionment_type
  #==(-2) input TRUE apportionment
  #==(-1) no recruitment apportionment to regions within a stock (each region within a stock gets full amount of recruits from SR curve)
  #==0 apportionment to each region is based on relative SSB in region compared to stock SSB
  #==1 input apportionment (can differ from TRUE apportionment)
  #==2 recruits are apportioned equally to each region within a stock
  #==3 estimate time-invariant apportionment...make sure ONLY ph_rec_app_CNST>0 (ph_rec_app_YR is only used if type==4)
  #==4 THIS DOES NOT APPEAR TO WORK PROPERLY, DO NOT USE.....estimate yearly apportionment, MAKE SURE BOTH APPORTIONMENT PHASES ARE POSITIVE!!!!!!  use both parameters vectors for this 
-2

#use_stock_comp_info_survey
 #Determines whether it is assumed that info (stock composition data) is available determine natal origin for age composition data
 #==0 calc OBS survey age comps by area (summed across natal population)
 #==1 calc OBS survey age comps by natal population within each area
0

#use_stock_comp_info_catch
 #Determines whether it is assumed that info (stock composition data) is available determine natal origin for age composition data
 #==0 calc OBS catch age comps by area (summed across natal population)
 #==1 calc OBS catch age comps by natal population within each area
0

#F_switch
  #==1 estimate yearly F
  #==2 random walk in F //NOT IMPLEMENTED DO NOT USE
1
#M_switch
   #all M types are constant across regions
   #==(-1) use input_M (can differ from TRUE M)
   #==0 use input_M_TRUE
   #==1 estimate constant M (const across pop and age), ph_M_CNST>0
   #==2 estimate population-based M (const across ages), ph_M_pop_CNST>0
   #==3 estimate age-based M (const across pop), ph_M_age_CNST>0
   #==4 estimate age- and population-varying M, ph_M_pop_age>0
0
#recruit_devs_switch
 # //==0 use stock-recruit relationphip directly (make sure to set ph_rec=0), also assumes initial abund for all ages=R0
 # //==1 allow lognormal error around SR curve (i.e., include randomness based on input sigma_recruit)
1

#recruit_randwalk_switch
 # //==0 no random walk recruitment deviations
 # //==1 have random walk lognormal recruitment deviations (requirs recruit_devs_switch==1)....NEEDS WORK!!!!!
0

#init_abund_switch
  #==0 est init abund where R_ave is the age-1 abundance in year 1  (to avoid overparametrization of recruitment)
  #==1 decay from R_ave
0
#init_number input_dist_init_abund_EM
  #==(-2) use input_dist_init_abund specified for EM (can differ from true)
  #==(-1) assume all fish in a pop are equally distributed across regions in that pop (no fish start outside natal pop)
  #==0 use true distribution of init_abundance
  #==1 estimate the spatial distribution of init abundance, need to make ph_non_natal_init OR ph_reg_init non-negative depending on spatial structure used
0
#tspawn_EM(1,np_em)
0
0

#return_probability_EM(1,np_em)
1
1

#spawn_return_prob_EM(1,np_em)
1
1

#do_tag
  #==0 do not calculate tagging data
  #==1 calculate tagging data
1

#do_tag_mult
  #==0 assume neg binomial distribution for tagging data
  #==1 assume multinomial distribution (same as OM)
1

#input_T_EM (1,np_em,1,nreg_em,1,na,1,np_em,1,nreg_em)
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75

#input_R_ave_EM
6000
4000
#rec_prop_em(1,np_em,1,nreg_em,1,nyr)
1	1	1	1	1	1	1	1       1	1	1	1	1	1	1	1       1	1	1	1	1	1	1	1       1	1	1	1	1	1	
1	1	1	1	1	1	1	1       1	1	1	1	1	1	1	1       1	1	1	1	1	1	1	1       1	1	1	1	1	1	
#sigma_rec_em(1,np_em)
0.55
0.5
#input_steep_EM
0.8
0.8

#init_abund
6000	5000	5040	4320	3000	2500	1500	1000
0	0	0	0	0	0	0	0
0	0	0	0	0	0	0	0
4000	3500	4000	3000	1250	1000	900	800
#input_dist_init_abund_EM
1
0
0
1
#input_M_EM(1,np_em,1,na)
0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2
0.25	0.25	0.25	0.25	0.25	0.25	0.25	0.25
#input_selectivity_EM (1,ns,1,nreg,1,na,1,nf)
0.05	0.1	0.25	.68	.95	.99	1	1
0.01	0.05	0.37	0.84	0.97	1	1	1

#input_survey_selectivity_EM(1,ns,1,nreg,1,na,1,nf)
0.03	0.3	0.75	0.95	1	1	1	1
0.05	0.2	0.69	0.9	1	1	1	1

#report_rate(1,np_em,1,nreg_em)
 # input tag reporting rate for EM which can differ from true reporting rate above, not time-varying
0.7
0.8

################################
##### Phases for estimation ####
################################
#ph_lmr
1
#Rave_start
8.5
#lb_R_ave
2
#up_R_ave
20
#ph_rec
2
#lb_rec_devs
-10
#ub_rec_devs
10
#ph_rec_app_CNST //if apportionment_type==4 then both app phases below need to be positive (estimate 2 sets of parameters)
-4
#ph_rec_app_YR
-4
#lb_rec_app
-5
#ub_rec_app
5
#ph_init_abund
1
#N_start
8
#ph_reg_init // est initial distribution of abundance across regions, only use if mult regs (non natal homing)
-2
#ph_non_natal_init // est initial distribution of abundance across both regions and populations, only use if natal homing
-1
#lb_init_dist //used for above two sets of parameters (init dist of abund)
-9
#ub_init_dist //used for above two sets of parameters (init dist of abund)
10
#lb_abund_devs
2
#ub_abund_devs
20
#ph_F
3
#lb_F
-5
#ub_F
5
#ph_steep
-1
#lb_steep
0.2
#ub_steep
1
#ph_M_CNST  //M cnst 
-1
#ph_M_pop_CNST //M vary by pop
-1
#ph_M_age_CNST //M vary by age not pop
-1
#ph_M_pop_age //M vary by age and pop
-1
#lb_M
-5
#ub_M
5
#ph_sel_log
4
#lb_sel_beta1  //lower bound on fishery selectivity parameters in ln space
-5 
#ub_sel_beta1  //upper bound on fishery selectivity parameters in ln space
5
#lb_sel_beta2  //lower bound on fishery selectivity parameters in ln space
-5
#ub_sel_beta2  //upper bound on fishery selectivity parameters in ln space
5
#lb_sel_beta3  //lower bound on fishery selectivity parameters in ln space
-10 
#ub_sel_beta3  //upper bound on fishery selectivity parameters in ln space
5
#lb_sel_beta4  //lower bound on fishery selectivity parameters in ln space
-10
#ub_sel_beta4  //upper bound on fishery selectivity parameters in ln space
5
#lb_sel_beta1_surv  //lower bound on survey selectivity parameters in ln space
-5
#ub_sel_beta1_surv  //upper bound on survey selectivity parameters in ln space
5
#lb_sel_beta2_surv  //lower bound on survey selectivity parameters in ln space
-5 
#ub_sel_beta2_surv  //upper bound on survey selectivity parameters in ln space
5
#lb_sel_beta3_surv  //lower bound on survey selectivity parameters in ln space
-10 
#ub_sel_beta3_surv  //upper bound on survey selectivity parameters in ln space
5
#lb_sel_beta4_surv  //lower bound on survey selectivity parameters in ln space
-10
#ub_sel_beta4_surv  //upper bound on survey selectivity parameters in ln space
5
#ph_sel_log_surv
4
#ph_sel_dubl
-5
#ph_sel_dubl_surv
-5
#ph_q
1
#lb_q
-10
#ub_q
5
#ph_F_rho
-1
#lb_F_rho
0
#ub_F_rho
2
#ph_T_YR
-5
#ph_T_YR_ALT_FREQ
 # estimate T at intervals set by T_est_freq (i.e., every T_est_Freq year)
-5
#T_est_freq (number year parameters is nyrs/T_est_freq, rounded up)
2
#ph_T_YR_AGE_ALT_FREQ
 # est T at invervals set by T_est_frew and T_age_freq (i.e., every T_est_Freq year and every T_age_freq age)
5
###########################################################################
#T_est_age_freq (number age parameters is nages/T_age_freq, rounded up)
 #IF juv_age HIGHER THAN CUTPOINT FOR 2nd AGE CLASS THEN WILL HAVE UNUSED MOVEMENT PARAMETERS AND LIKELY CONVERGENCE ISSUES
1
#juv_age
 #age at and below which all Ts  are set to the estimated movement rate for age-1 (when using ph_T_YR_AGE_ALT_FREQ>1)
1
######################################################################################
#ph_T_CNST
-5
#ph_T_CNST_AGE
-6
#ph_T_YR_AGE
-6
#ph_T_CNST_AGE_no_AG1
 #fix age-1 movement at 100% residency and let rec devs subsume age-1 movement (due to difficulties estimating age-1 movement)
-6
#ph_T_YR_AGE_no_AG1
 #fix age-1 movement at 100% residency and let rec devs subsume age-1 movement (due to difficulties estimating age-1 movement)
-6
#ph_T_YR_AGE_ALT_FREQ_no_AG1
 #fix age-1 movement at 100% residency and let rec devs subsume age-1 movement (due to difficulties estimating age-1 movement)
 # est T at invervals set by T_est_freq and T_age_freq (i.e., every T_est_Freq year and every T_age_freq age)
 #Age-1 fixed at 100% residency
-5
#lb_T
-10
#ub_T
10
#T_start
 # starting value for T parameters in log space, for 2 pops ==-2 gives ~90% residency, for 3 pops ==-3 gives ~60% residency
-1.25
#ph_rep_rate_YR
-6
#ph_rep_rate_CNST
-6
#lb_B
-6
#ub_B
6
#ph_T_tag
-7
#ph_F_tag
-3
#lb_scalar
-10
#ub_scalar
10
#ph_dummy
-1

##################################
### likelihood weights
#################################
#wt_surv
1
#wt_catch
1
#wt_fish_ag
1
#wt_srv_age
1
#wt_rec
1.0
#wt_tag
1
#wt_F_pen// weight on F penalty
1
#wt_M_pen// weight on M penalty
0
#wt_B_pen  //reporting rate prior penalty
0
#report_rate_sigma //reporting rate variance for prior
0.1
#report_rate_ave //average value for reporting rate prior
0.5
#abund_pen_switch
 #// include penalty (norm2) on init_abund_devs?  0==no, 1==yes
 #//==0 no pen in log space
 #//==1 include pen in log space
0

#wt_abund_pen// abund penalty wt
0.1
#mean_N
-8
#move_pen_switch
 #stabilizes movement parameter estimates...infinite number of large and small values can give same actual movement rate near bounds due to logit transform
 #// ==0 no move pen in log space
 #// ==1 use norm2 move pen on log movement parameters
 #// ==2 use normal move pen log movement parameters
1

#wt_move_pen //movement penalty wt
1
#Tpen
#value against which T estimates are penalized (i.e., deviations from this value are penalized) in log space (i.e., based on the logit transform values)
# for 2 populations 1.5 centers mean on ~80% residency (~20% movement) and for 3 populations around 70% residency (15% movement to each population)
# use the negative of the value that want to center estimates around (so that an estimate of the average value provides a zero penalty)
1.25
#Tpen2
#not used
0.4
#sigma_Tpen_EM
#controls deviations from Tpen when move_pen_switch==2
0.5
#Rave_pen_switch
 #// ==0 no Rave pen in log space
 #// ==1 use norm2 Rave pen on log movement parameters
1
#wt_Rave_pen
10
#Rave_mean
-8.5
#controlling error for the EM
#OBS_survey_fleet_bio_se_EM(1,np_em,1,nreg_em,1,ny,1,nf_em)  #standard errors
0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2
0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2

#OBS_yield_fleet_se(1,np_em,1,nreg,1,ny,1,nf_em)  #standard errors
0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05
0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05

#OBS_survey_prop_N(1,np_em,1,nreg_em,1,ny,1,nfs_em) #number of survey ages
150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150
150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150

#OBS_catch_at_age_fleet_prop_N(1,np_em,1,nreg_em,1,ny,1,nfs) //fishery sample size ages
150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150
150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150

#tag_N(1,np_em,1,nreg_em,1,ny_rel,1,na) //fishery sample size ages
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
#T_Full_Input (1,np,1,nreg,1,xn,1,np,1,nreg) ... xn=na*ny;
0.95	0.05
0.87	0.13
0.75	0.25
0.8	0.2
0.7	0.3
0.85	0.15
0.75	0.25
0.9	0.1
0.95137931	0.04862069
0.872758621	0.127241379
0.755172414	0.244827586
0.804482759	0.195517241
0.705862069	0.294137931
0.854137931	0.145862069
0.756206897	0.243793103
0.902413793	0.097586207
0.952758621	0.047241379
0.875517241	0.124482759
0.760344828	0.239655172
0.808965517	0.191034483
0.711724138	0.288275862
0.858275862	0.141724138
0.762413793	0.237586207
0.904827586	0.095172414
0.954137931	0.045862069
0.878275862	0.121724138
0.765517241	0.234482759
0.813448276	0.186551724
0.717586207	0.282413793
0.862413793	0.137586207
0.76862069	0.23137931
0.907241379	0.092758621
0.955517241	0.044482759
0.881034483	0.118965517
0.770689655	0.229310345
0.817931034	0.182068966
0.723448276	0.276551724
0.866551724	0.133448276
0.774827586	0.225172414
0.909655172	0.090344828
0.956896552	0.043103448
0.883793103	0.116206897
0.775862069	0.224137931
0.822413793	0.177586207
0.729310345	0.270689655
0.870689655	0.129310345
0.781034483	0.218965517
0.912068966	0.087931034
0.958275862	0.041724138
0.886551724	0.113448276
0.781034483	0.218965517
0.826896552	0.173103448
0.735172414	0.264827586
0.874827586	0.125172414
0.787241379	0.212758621
0.914482759	0.085517241
0.959655172	0.040344828
0.889310345	0.110689655
0.786206897	0.213793103
0.83137931	0.16862069
0.741034483	0.258965517
0.878965517	0.121034483
0.793448276	0.206551724
0.916896552	0.083103448
0.961034483	0.038965517
0.892068966	0.107931034
0.79137931	0.20862069
0.835862069	0.164137931
0.746896552	0.253103448
0.883103448	0.116896552
0.799655172	0.200344828
0.919310345	0.080689655
0.962413793	0.037586207
0.894827586	0.105172414
0.796551724	0.203448276
0.840344828	0.159655172
0.752758621	0.247241379
0.887241379	0.112758621
0.805862069	0.194137931
0.921724138	0.078275862
0.963793103	0.036206897
0.897586207	0.102413793
0.801724138	0.198275862
0.844827586	0.155172414
0.75862069	0.24137931
0.89137931	0.10862069
0.812068966	0.187931034
0.924137931	0.075862069
0.965172414	0.034827586
0.900344828	0.099655172
0.806896552	0.193103448
0.849310345	0.150689655
0.764482759	0.235517241
0.895517241	0.104482759
0.818275862	0.181724138
0.926551724	0.073448276
0.966551724	0.033448276
0.903103448	0.096896552
0.812068966	0.187931034
0.853793103	0.146206897
0.770344828	0.229655172
0.899655172	0.100344828
0.824482759	0.175517241
0.928965517	0.071034483
0.967931034	0.032068966
0.905862069	0.094137931
0.817241379	0.182758621
0.858275862	0.141724138
0.776206897	0.223793103
0.903793103	0.096206897
0.830689655	0.169310345
0.93137931	0.06862069
0.969310345	0.030689655
0.90862069	0.09137931
0.822413793	0.177586207
0.862758621	0.137241379
0.782068966	0.217931034
0.907931034	0.092068966
0.836896552	0.163103448
0.933793103	0.066206897
0.970689655	0.029310345
0.91137931	0.08862069
0.827586207	0.172413793
0.867241379	0.132758621
0.787931034	0.212068966
0.912068966	0.087931034
0.843103448	0.156896552
0.936206897	0.063793103
0.972068966	0.027931034
0.914137931	0.085862069
0.832758621	0.167241379
0.871724138	0.128275862
0.793793103	0.206206897
0.916206897	0.083793103
0.849310345	0.150689655
0.93862069	0.06137931
0.973448276	0.026551724
0.916896552	0.083103448
0.837931034	0.162068966
0.876206897	0.123793103
0.799655172	0.200344828
0.920344828	0.079655172
0.855517241	0.144482759
0.941034483	0.058965517
0.974827586	0.025172414
0.919655172	0.080344828
0.843103448	0.156896552
0.880689655	0.119310345
0.805517241	0.194482759
0.924482759	0.075517241
0.861724138	0.138275862
0.943448276	0.056551724
0.976206897	0.023793103
0.922413793	0.077586207
0.848275862	0.151724138
0.885172414	0.114827586
0.81137931	0.18862069
0.92862069	0.07137931
0.867931034	0.132068966
0.945862069	0.054137931
0.977586207	0.022413793
0.925172414	0.074827586
0.853448276	0.146551724
0.889655172	0.110344828
0.817241379	0.182758621
0.932758621	0.067241379
0.874137931	0.125862069
0.948275862	0.051724138
0.978965517	0.021034483
0.927931034	0.072068966
0.85862069	0.14137931
0.894137931	0.105862069
0.823103448	0.176896552
0.936896552	0.063103448
0.880344828	0.119655172
0.950689655	0.049310345
0.980344828	0.019655172
0.930689655	0.069310345
0.863793103	0.136206897
0.89862069	0.10137931
0.828965517	0.171034483
0.941034483	0.058965517
0.886551724	0.113448276
0.953103448	0.046896552
0.981724138	0.018275862
0.933448276	0.066551724
0.868965517	0.131034483
0.903103448	0.096896552
0.834827586	0.165172414
0.945172414	0.054827586
0.892758621	0.107241379
0.955517241	0.044482759
0.983103448	0.016896552
0.936206897	0.063793103
0.874137931	0.125862069
0.907586207	0.092413793
0.840689655	0.159310345
0.949310345	0.050689655
0.898965517	0.101034483
0.957931034	0.042068966
0.984482759	0.015517241
0.938965517	0.061034483
0.879310345	0.120689655
0.912068966	0.087931034
0.846551724	0.153448276
0.953448276	0.046551724
0.905172414	0.094827586
0.960344828	0.039655172
0.985862069	0.014137931
0.941724138	0.058275862
0.884482759	0.115517241
0.916551724	0.083448276
0.852413793	0.147586207
0.957586207	0.042413793
0.91137931	0.08862069
0.962758621	0.037241379
0.987241379	0.012758621
0.944482759	0.055517241
0.889655172	0.110344828
0.921034483	0.078965517
0.858275862	0.141724138
0.961724138	0.038275862
0.917586207	0.082413793
0.965172414	0.034827586
0.98862069	0.01137931
0.947241379	0.052758621
0.894827586	0.105172414
0.925517241	0.074482759
0.864137931	0.135862069
0.965862069	0.034137931
0.923793103	0.076206897
0.967586207	0.032413793
0.99	0.01
0.95	0.05
0.9	0.1
0.93	0.07
0.87	0.13
0.97	0.03
0.93	0.07
0.97	0.03
0.1	0.9
0.15	0.85
0.3	0.7
0.25	0.75
0.2	0.8
0.1	0.9
0.25	0.75
0.2	0.8
0.110344828	0.889655172
0.15862069	0.84137931
0.310344828	0.689655172
0.256896552	0.743103448
0.206896552	0.793103448
0.112068966	0.887931034
0.25862069	0.74137931
0.213793103	0.786206897
0.120689655	0.879310345
0.167241379	0.832758621
0.320689655	0.679310345
0.263793103	0.736206897
0.213793103	0.786206897
0.124137931	0.875862069
0.267241379	0.732758621
0.227586207	0.772413793
0.131034483	0.868965517
0.175862069	0.824137931
0.331034483	0.668965517
0.270689655	0.729310345
0.220689655	0.779310345
0.136206897	0.863793103
0.275862069	0.724137931
0.24137931	0.75862069
0.14137931	0.85862069
0.184482759	0.815517241
0.34137931	0.65862069
0.277586207	0.722413793
0.227586207	0.772413793
0.148275862	0.851724138
0.284482759	0.715517241
0.255172414	0.744827586
0.151724138	0.848275862
0.193103448	0.806896552
0.351724138	0.648275862
0.284482759	0.715517241
0.234482759	0.765517241
0.160344828	0.839655172
0.293103448	0.706896552
0.268965517	0.731034483
0.162068966	0.837931034
0.201724138	0.798275862
0.362068966	0.637931034
0.29137931	0.70862069
0.24137931	0.75862069
0.172413793	0.827586207
0.301724138	0.698275862
0.282758621	0.717241379
0.172413793	0.827586207
0.210344828	0.789655172
0.372413793	0.627586207
0.298275862	0.701724138
0.248275862	0.751724138
0.184482759	0.815517241
0.310344828	0.689655172
0.296551724	0.703448276
0.182758621	0.817241379
0.218965517	0.781034483
0.382758621	0.617241379
0.305172414	0.694827586
0.255172414	0.744827586
0.196551724	0.803448276
0.318965517	0.681034483
0.310344828	0.689655172
0.193103448	0.806896552
0.227586207	0.772413793
0.393103448	0.606896552
0.312068966	0.687931034
0.262068966	0.737931034
0.20862069	0.79137931
0.327586207	0.672413793
0.324137931	0.675862069
0.203448276	0.796551724
0.236206897	0.763793103
0.403448276	0.596551724
0.318965517	0.681034483
0.268965517	0.731034483
0.220689655	0.779310345
0.336206897	0.663793103
0.337931034	0.662068966
0.213793103	0.786206897
0.244827586	0.755172414
0.413793103	0.586206897
0.325862069	0.674137931
0.275862069	0.724137931
0.232758621	0.767241379
0.344827586	0.655172414
0.351724138	0.648275862
0.224137931	0.775862069
0.253448276	0.746551724
0.424137931	0.575862069
0.332758621	0.667241379
0.282758621	0.717241379
0.244827586	0.755172414
0.353448276	0.646551724
0.365517241	0.634482759
0.234482759	0.765517241
0.262068966	0.737931034
0.434482759	0.565517241
0.339655172	0.660344828
0.289655172	0.710344828
0.256896552	0.743103448
0.362068966	0.637931034
0.379310345	0.620689655
0.244827586	0.755172414
0.270689655	0.729310345
0.444827586	0.555172414
0.346551724	0.653448276
0.296551724	0.703448276
0.268965517	0.731034483
0.370689655	0.629310345
0.393103448	0.606896552
0.255172414	0.744827586
0.279310345	0.720689655
0.455172414	0.544827586
0.353448276	0.646551724
0.303448276	0.696551724
0.281034483	0.718965517
0.379310345	0.620689655
0.406896552	0.593103448
0.265517241	0.734482759
0.287931034	0.712068966
0.465517241	0.534482759
0.360344828	0.639655172
0.310344828	0.689655172
0.293103448	0.706896552
0.387931034	0.612068966
0.420689655	0.579310345
0.275862069	0.724137931
0.296551724	0.703448276
0.475862069	0.524137931
0.367241379	0.632758621
0.317241379	0.682758621
0.305172414	0.694827586
0.396551724	0.603448276
0.434482759	0.565517241
0.286206897	0.713793103
0.305172414	0.694827586
0.486206897	0.513793103
0.374137931	0.625862069
0.324137931	0.675862069
0.317241379	0.682758621
0.405172414	0.594827586
0.448275862	0.551724138
0.296551724	0.703448276
0.313793103	0.686206897
0.496551724	0.503448276
0.381034483	0.618965517
0.331034483	0.668965517
0.329310345	0.670689655
0.413793103	0.586206897
0.462068966	0.537931034
0.306896552	0.693103448
0.322413793	0.677586207
0.506896552	0.493103448
0.387931034	0.612068966
0.337931034	0.662068966
0.34137931	0.65862069
0.422413793	0.577586207
0.475862069	0.524137931
0.317241379	0.682758621
0.331034483	0.668965517
0.517241379	0.482758621
0.394827586	0.605172414
0.344827586	0.655172414
0.353448276	0.646551724
0.431034483	0.568965517
0.489655172	0.510344828
0.327586207	0.672413793
0.339655172	0.660344828
0.527586207	0.472413793
0.401724138	0.598275862
0.351724138	0.648275862
0.365517241	0.634482759
0.439655172	0.560344828
0.503448276	0.496551724
0.337931034	0.662068966
0.348275862	0.651724138
0.537931034	0.462068966
0.40862069	0.59137931
0.35862069	0.64137931
0.377586207	0.622413793
0.448275862	0.551724138
0.517241379	0.482758621
0.348275862	0.651724138
0.356896552	0.643103448
0.548275862	0.451724138
0.415517241	0.584482759
0.365517241	0.634482759
0.389655172	0.610344828
0.456896552	0.543103448
0.531034483	0.468965517
0.35862069	0.64137931
0.365517241	0.634482759
0.55862069	0.44137931
0.422413793	0.577586207
0.372413793	0.627586207
0.401724138	0.598275862
0.465517241	0.534482759
0.544827586	0.455172414
0.368965517	0.631034483
0.374137931	0.625862069
0.568965517	0.431034483
0.429310345	0.570689655
0.379310345	0.620689655
0.413793103	0.586206897
0.474137931	0.525862069
0.55862069	0.44137931
0.379310345	0.620689655
0.382758621	0.617241379
0.579310345	0.420689655
0.436206897	0.563793103
0.386206897	0.613793103
0.425862069	0.574137931
0.482758621	0.517241379
0.572413793	0.427586207
0.389655172	0.610344828
0.39137931	0.60862069
0.589655172	0.410344828
0.443103448	0.556896552
0.393103448	0.606896552
0.437931034	0.562068966
0.49137931	0.50862069
0.586206897	0.413793103
0.4	0.6
0.4	0.6
0.6	0.4
0.45	0.55
0.4	0.6
0.45	0.55
0.5	0.5
0.6	0.4

################################################################################################################
################################################################################################################
################################################################################################################
################################################################################################################
################################################################################################################
################################################################################################################

#debug
1541
#myseed_yield
8995
#myseed_survey
27653
#myseed_F
45652
#myseed_rec_devs
23441
#myseed_rec_apport
70006
#myseed_rec_index
40009
#myseed_survey_age
600006
#myseed_catch_age
455
#myseed_tag
50000
#myseed_T
33

